/*! For license information please see 5092.min.js.LICENSE.txt */
"use strict";
(self.webpackChunkweb_plugin = self.webpackChunkweb_plugin || []).push([
    [5092], {
        5092: (e, t, n) => {
            n.r(t), n.d(t, {
                ZendeskLoadTime: () => g,
                loadZChat: () => p,
                loadZendesk: () => m,
                optionForEndChat: () => I,
                uiEventHandlerZendesk: () => k,
                zendeskPromotionForCommentAndRating: () => y,
                zendeskQRMessage: () => b,
                zendeskStoreMessage: () => C,
                zendeskTextMessage: () => x
            });
            var o = n(7754),
                a = n(8908),
                i = n(7563),
                r = n(5198),
                d = n(4596),
                s = n(9755);

            function c(e) {
                return c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, c(e)
            }

            function w() {
                w = function() {
                    return t
                };
                var e, t = {},
                    n = Object.prototype,
                    o = n.hasOwnProperty,
                    a = Object.defineProperty || function(e, t, n) {
                        e[t] = n.value
                    },
                    i = "function" == typeof Symbol ? Symbol : {},
                    r = i.iterator || "@@iterator",
                    d = i.asyncIterator || "@@asyncIterator",
                    s = i.toStringTag || "@@toStringTag";

                function u(e, t, n) {
                    return Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t]
                }
                try {
                    u({}, "")
                } catch (e) {
                    u = function(e, t, n) {
                        return e[t] = n
                    }
                }

                function h(e, t, n, o) {
                    var i = t && t.prototype instanceof k ? t : k,
                        r = Object.create(i.prototype),
                        d = new S(o || []);
                    return a(r, "_invoke", {
                        value: J(e, n, d)
                    }), r
                }

                function l(e, t, n) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, n)
                        }
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        }
                    }
                }
                t.wrap = h;
                var f = "suspendedStart",
                    g = "suspendedYield",
                    m = "executing",
                    v = "completed",
                    p = {};

                function k() {}

                function _() {}

                function z() {}
                var y = {};
                u(y, r, (function() {
                    return this
                }));
                var C = Object.getPrototypeOf,
                    b = C && C(C(E([])));
                b && b !== n && o.call(b, r) && (y = b);
                var x = z.prototype = k.prototype = Object.create(y);

                function I(e) {
                    ["next", "throw", "return"].forEach((function(t) {
                        u(e, t, (function(e) {
                            return this._invoke(t, e)
                        }))
                    }))
                }

                function O(e, t) {
                    function n(a, i, r, d) {
                        var s = l(e[a], e, i);
                        if ("throw" !== s.type) {
                            var w = s.arg,
                                u = w.value;
                            return u && "object" == c(u) && o.call(u, "__await") ? t.resolve(u.__await).then((function(e) {
                                n("next", e, r, d)
                            }), (function(e) {
                                n("throw", e, r, d)
                            })) : t.resolve(u).then((function(e) {
                                w.value = e, r(w)
                            }), (function(e) {
                                return n("throw", e, r, d)
                            }))
                        }
                        d(s.arg)
                    }
                    var i;
                    a(this, "_invoke", {
                        value: function(e, o) {
                            function a() {
                                return new t((function(t, a) {
                                    n(e, o, t, a)
                                }))
                            }
                            return i = i ? i.then(a, a) : a()
                        }
                    })
                }

                function J(t, n, o) {
                    var a = f;
                    return function(i, r) {
                        if (a === m) throw Error("Generator is already running");
                        if (a === v) {
                            if ("throw" === i) throw r;
                            return {
                                value: e,
                                done: !0
                            }
                        }
                        for (o.method = i, o.arg = r;;) {
                            var d = o.delegate;
                            if (d) {
                                var s = T(d, o);
                                if (s) {
                                    if (s === p) continue;
                                    return s
                                }
                            }
                            if ("next" === o.method) o.sent = o._sent = o.arg;
                            else if ("throw" === o.method) {
                                if (a === f) throw a = v, o.arg;
                                o.dispatchException(o.arg)
                            } else "return" === o.method && o.abrupt("return", o.arg);
                            a = m;
                            var c = l(t, n, o);
                            if ("normal" === c.type) {
                                if (a = o.done ? v : g, c.arg === p) continue;
                                return {
                                    value: c.arg,
                                    done: o.done
                                }
                            }
                            "throw" === c.type && (a = v, o.method = "throw", o.arg = c.arg)
                        }
                    }
                }

                function T(t, n) {
                    var o = n.method,
                        a = t.iterator[o];
                    if (a === e) return n.delegate = null, "throw" === o && t.iterator.return && (n.method = "return", n.arg = e, T(t, n), "throw" === n.method) || "return" !== o && (n.method = "throw", n.arg = new TypeError("The iterator does not provide a '" + o + "' method")), p;
                    var i = l(a, t.iterator, n.arg);
                    if ("throw" === i.type) return n.method = "throw", n.arg = i.arg, n.delegate = null, p;
                    var r = i.arg;
                    return r ? r.done ? (n[t.resultName] = r.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = e), n.delegate = null, p) : r : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, p)
                }

                function M(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                }

                function P(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t
                }

                function S(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], e.forEach(M, this), this.reset(!0)
                }

                function E(t) {
                    if (t || "" === t) {
                        var n = t[r];
                        if (n) return n.call(t);
                        if ("function" == typeof t.next) return t;
                        if (!isNaN(t.length)) {
                            var a = -1,
                                i = function n() {
                                    for (; ++a < t.length;)
                                        if (o.call(t, a)) return n.value = t[a], n.done = !1, n;
                                    return n.value = e, n.done = !0, n
                                };
                            return i.next = i
                        }
                    }
                    throw new TypeError(c(t) + " is not iterable")
                }
                return _.prototype = z, a(x, "constructor", {
                    value: z,
                    configurable: !0
                }), a(z, "constructor", {
                    value: _,
                    configurable: !0
                }), _.displayName = u(z, s, "GeneratorFunction"), t.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === _ || "GeneratorFunction" === (t.displayName || t.name))
                }, t.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, z) : (e.__proto__ = z, u(e, s, "GeneratorFunction")), e.prototype = Object.create(x), e
                }, t.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, I(O.prototype), u(O.prototype, d, (function() {
                    return this
                })), t.AsyncIterator = O, t.async = function(e, n, o, a, i) {
                    void 0 === i && (i = Promise);
                    var r = new O(h(e, n, o, a), i);
                    return t.isGeneratorFunction(n) ? r : r.next().then((function(e) {
                        return e.done ? e.value : r.next()
                    }))
                }, I(x), u(x, s, "Generator"), u(x, r, (function() {
                    return this
                })), u(x, "toString", (function() {
                    return "[object Generator]"
                })), t.keys = function(e) {
                    var t = Object(e),
                        n = [];
                    for (var o in t) n.push(o);
                    return n.reverse(),
                        function e() {
                            for (; n.length;) {
                                var o = n.pop();
                                if (o in t) return e.value = o, e.done = !1, e
                            }
                            return e.done = !0, e
                        }
                }, t.values = E, S.prototype = {
                    constructor: S,
                    reset: function(t) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = "next", this.arg = e, this.tryEntries.forEach(P), !t)
                            for (var n in this) "t" === n.charAt(0) && o.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(t) {
                        if (this.done) throw t;
                        var n = this;

                        function a(o, a) {
                            return d.type = "throw", d.arg = t, n.next = o, a && (n.method = "next", n.arg = e), !!a
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var r = this.tryEntries[i],
                                d = r.completion;
                            if ("root" === r.tryLoc) return a("end");
                            if (r.tryLoc <= this.prev) {
                                var s = o.call(r, "catchLoc"),
                                    c = o.call(r, "finallyLoc");
                                if (s && c) {
                                    if (this.prev < r.catchLoc) return a(r.catchLoc, !0);
                                    if (this.prev < r.finallyLoc) return a(r.finallyLoc)
                                } else if (s) {
                                    if (this.prev < r.catchLoc) return a(r.catchLoc, !0)
                                } else {
                                    if (!c) throw Error("try statement without catch or finally");
                                    if (this.prev < r.finallyLoc) return a(r.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var a = this.tryEntries[n];
                            if (a.tryLoc <= this.prev && o.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
                                var i = a;
                                break
                            }
                        }
                        i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                        var r = i ? i.completion : {};
                        return r.type = e, r.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, p) : this.complete(r)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), p
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), P(n), p
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.tryLoc === e) {
                                var o = n.completion;
                                if ("throw" === o.type) {
                                    var a = o.arg;
                                    P(n)
                                }
                                return a
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(t, n, o) {
                        return this.delegate = {
                            iterator: E(t),
                            resultName: n,
                            nextLoc: o
                        }, "next" === this.method && (this.arg = e), p
                    }
                }, t
            }

            function u(e, t, n, o, a, i, r) {
                try {
                    var d = e[i](r),
                        s = d.value
                } catch (e) {
                    return void n(e)
                }
                d.done ? t(s) : Promise.resolve(s).then(o, a)
            }

            function h(e) {
                return function() {
                    var t = this,
                        n = arguments;
                    return new Promise((function(o, a) {
                        var i = e.apply(t, n);

                        function r(e) {
                            u(i, o, a, r, d, "next", e)
                        }

                        function d(e) {
                            u(i, o, a, r, d, "throw", e)
                        }
                        r(void 0)
                    }))
                }
            }
            var l = (0, i.sq)(),
                f = {
                    icon: "ri-logout-box-line",
                    title: (0, d.t)("title.zendeskLeaveChat"),
                    key: "zendeskLeaveChat",
                    action: function(e) {
                        e.stopPropagation(), I()
                    }
                },
                g = 3e3,
                m = function() {
                    var e = document.createElement("script");
                    e.type = "text/javascript", e.src = "https://dev.zopim.com/web-sdk/1.11.2/web-sdk.js", e.charset = "utf-8", document.body.appendChild(e), e.onload = v
                },
                v = function() {
                    try {
                        var e;
                        window.zChat ? document.getElementById("ymIframe").contentWindow.postMessage(JSON.stringify({
                            event_code: "load-zchat",
                            data: "{}"
                        }), (0, a.ai)(null === (e = window.frames.ymIframe) || void 0 === e || null === (e = e.ym) || void 0 === e ? void 0 : e.acceptedDomains)) : setTimeout(v, 100)
                    } catch (e) {
                        (0, o.vU)(e)
                    }
                },
                p = function() {
                    if (window.parent.zChat) {
                        window.zChat = window.parent.zChat, window.zChat.init({
                            account_key: window.ymConfig.zendeskId
                        });
                        var e = Date.now();
                        window.zChat.on("agent_update", (function(e) {
                            if ((0, o.cM)("agent_update", e), window.chat.agentProfile = e, window.chat.timer && window.clearInterval(window.chat.timer), window.chat.zendeskConnectedInThisPage && !window.chat.zendesk.agentJoinedAck) window.chat.zendesk.agentJoinedAck = !1, window.chat.zendesk.agentConnected = !0, window.chat.zendesk.userRated = !1, window.chat.zendesk.userCommented = !1, window.chat.zendesk.userCommentClick = !1, window.chat.zendesk.queue_position = 0, i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), window.chat.zendeskCheckAgentConnected();
                            else {
                                window.chat.zendeskConnectedInThisPage = !0, window.chat.zendesk.agentConnected = !0, window.chat.skin && window.chat.skin.refreshContext && (window.chat.loadMessages(!1), window.chat.hideTyping()), window.chat.zendesk.userCommented = Boolean(window.zChat.getChatInfo().comment), window.chat.zendesk.userRated = Boolean(window.zChat.getChatInfo().rating);
                                try {
                                    window.chat.send({
                                        event: {
                                            code: "zendesk_user_refreshed_while_agent_connected",
                                            data: window.chat.zendesk
                                        }
                                    }, !0)
                                } catch (e) {
                                    (0, o.vU)("Error in sending zendesk_user_refreshed_while_agent_connected", e)
                                }
                            }
                        })), window.zChat.on("account_status", (function(e) {
                            (0, o.cM)("account_status", e)
                        })), window.zChat.on("visitor_update", (function(e) {
                            (0, o.cM)("visitor_update", e)
                        })), window.zChat.on("connection_update", (function(e) {
                            var t;
                            "connected" === e && (window.chat.zendesk.accountConnected = !0, (0, o.cM)("zendesk connected"), window.chat.zendesk.agentConnected && !window.zChat.isChatting() ? (window.chat.sendAgentDefaultMessage(!1, null === (t = window.chat.agentProfile) || void 0 === t ? void 0 : t.display_name, !1), window.chat.agentProfile = {}, window.chat.send({
                                event: {
                                    code: "zendesk_ticked_closed_unknown_reason"
                                }
                            }, !0)) : window.zChat.isChatting() ? window.chat.zendeskCheckAgentConnected() : (window.chat.zendesk = {}, i.FJ.deleteItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l)), window.chat.send({
                                event: {
                                    code: "zendesk_agent_left_due_to_unknown_reason"
                                }
                            }, !0))), (0, o.cM)("ZChat Connection", e)
                        })), window.zChat.on("chat", (function(t) {
                            if (window.chat.zendeskConnectedInThisPage) {
                                if ("chat.file" === t.type) {
                                    var n, a, d = null === (n = t.attachment) || void 0 === n ? void 0 : n.url;
                                    0 === (null === (a = t.attachment) || void 0 === a || null === (a = a.mime_type) || void 0 === a ? void 0 : a.indexOf("image")) ? window.chat.receiveMessage(JSON.stringify({
                                        image: d
                                    })) : window.chat.receiveMessage(JSON.stringify({
                                        file: d,
                                        name: t.attachment.name
                                    }))
                                }
                                var s;
                                if ("chat.msg" === t.type && "visitor" !== t.nick && -1 === t.msg.indexOf("zendesk_user_transcript") && t.timestamp > e && window.chat.receiveMessage(JSON.stringify({
                                        message: t.msg
                                    })), "chat.memberjoin" === t.type && (window.chat.agentProfile = t, 0 === t.nick.indexOf("agent") && (window.chat.zendesk.agentCount ? window.chat.zendesk.agentCount += 1 : window.chat.zendesk.agentCount = 1, 1 === window.chat.zendesk.agentCount ? window.chat.send({
                                        event: {
                                            code: "zendesk_agent_joined",
                                            data: t
                                        }
                                    }, !0) : window.chat.send({
                                        event: {
                                            code: "zendesk_new_agent_joined",
                                            data: t
                                        }
                                    }, !0))), "chat.memberleave" === t.type)
                                    if (0 === t.nick.indexOf("visitor")) window.chat.sendAgentDefaultMessage(!1, null === (s = window.chat.agentProfile) || void 0 === s ? void 0 : s.display_name, !1), window.chat.agentProfile = {}, window.chat.send({
                                        event: {
                                            code: "zendesk_ticket_closed",
                                            data: t
                                        }
                                    }, !0), window.chat.zendesk = {}, window.chat.zendeskConnectedInThisPage = !1, i.FJ.deleteItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l)), window.chat.changeAgentToBot(), (0, r.N6)(f), window.chat.closePromotion();
                                    else if (0 === t.nick.indexOf("agent")) {
                                    var c;
                                    window.chat.zendesk.agentCount -= 1, 0 === window.chat.zendesk.agentCount ? (window.chat.sendAgentDefaultMessage(!1, null === (c = window.chat.agentProfile) || void 0 === c ? void 0 : c.display_name, !1), window.chat.agentProfile = {}, window.chat.send({
                                        event: {
                                            code: "zendesk_agent_left_unknown_reason",
                                            data: t
                                        }
                                    }, !0), window.chat.zendesk = {}, window.chat.zendeskConnectedInThisPage = !1, i.FJ.deleteItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l)), window.chat.changeAgentToBot(), (0, r.N6)(f), window.chat.closePromotion()) : window.chat.send({
                                        event: {
                                            code: "zendesk_old_agent_left",
                                            data: t
                                        }
                                    }, !0)
                                }
                                "chat.queue_position" === t.type && (window.chat.zendesk.queue_position = t.queue_position), "chat.request.rating" === t.type && (window.chat.zendesk.agentRequestedRating = !0, window.chat.send({
                                    event: {
                                        code: "zendesk_agent_request_rating"
                                    }
                                }, !0)), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk))
                            } else(0, o.cM)("chat", t)
                        }))
                    } else setTimeout(p, 100)
                },
                k = function() {
                    var e = h(w().mark((function e(t) {
                        var n, a, d, c, u, h, g, m, v, p;
                        return w().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    e.t0 = t.code, e.next = "zendesk_event_send_offline_messages" === e.t0 ? 3 : "zendesk_event_connect_to_agent" === e.t0 ? 11 : "zendesk_event_connected_to_agent_ack" === e.t0 ? 17 : "zendesk_event_user_waiting" === e.t0 ? 29 : "zendesk_event_close_ticket" === e.t0 ? 33 : "zendesk_event_message_user" === e.t0 ? 41 : "zendesk_event_continue_agent_flow" === e.t0 ? 45 : "zendesk_event_send_user_rating" === e.t0 ? 48 : "zendesk_event_send_user_comment" === e.t0 ? 50 : "zendesk_event_get_agent_working_hours" === e.t0 ? 52 : "zendesk_event_get_department_status" === e.t0 ? 57 : 60;
                                    break;
                                case 3:
                                    if (window.chat.zendesk.accountConnected) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 5:
                                    return h = t.data.messageDetails.name || "USER", g = "zendesk_user_transcript:\n" + z(), t.data.message && (g = h + ": " + t.data.message + "\n"), t.data.tags && window.zChat.removeTags(t.data.allTags || [], (function(e) {
                                        e ? (0, o.cM)("Error while removing tags") : window.zChat.addTags(t.data.tags, (function(e) {
                                            (0, o.cM)("error", e)
                                        }))
                                    })), window.zChat.sendOfflineMsg({
                                        name: t.data.messageDetails.name,
                                        email: t.data.messageDetails.email,
                                        phone: t.data.messageDetails.phone,
                                        message: g,
                                        department: t.data.messageDetails.department
                                    }, (function(e) {
                                        e && (window.chat.send({
                                            event: {
                                                code: "zendesk_error_while_sending_offline_message"
                                            }
                                        }, !0), (0, o.cM)("Error while sending zendesk offline message:", e)), window.chat.send({
                                            event: {
                                                code: "zendesk_offline_message_sent"
                                            }
                                        }, !0)
                                    })), e.abrupt("break", 60);
                                case 11:
                                    return window.chat.zendesk.agentConnected = !0, window.chat.zendeskConnectedInThisPage = !0, s(".new-home-button").addClass("hide"), t.data.phone = "0987654321", window.zChat.setVisitorInfo({
                                        display_name: t.data.display_name,
                                        email: t.data.email,
                                        phone: t.data.phone
                                    }, (function(e) {
                                        (0, o.cM)(e, "in event");
                                        var n = "zendesk_user_transcript:\n" + z();
                                        window.zChat.setVisitorDefaultDepartment(t.data.department_id, (function(e) {
                                            (0, o.vU)("error in setting department", e)
                                        })), t.data.tags ? window.zChat.removeTags(t.data.allTags || [], (function(e) {
                                            e ? (0, o.vU)("Error while removing tags") : (window.zChat.addTags(t.data.tags, (function(e) {
                                                (0, o.vU)("error", e)
                                            })), window.zChat.sendChatMsg(n, (function(e) {
                                                (0, o.vU)("error", e)
                                            })))
                                        })) : window.zChat.sendChatMsg(n, (function(e) {
                                            (0, o.vU)("error", e)
                                        })), window.chat.zendesk.connectionTime = 0, _(), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk))
                                    })), e.abrupt("break", 60);
                                case 17:
                                    if (t.data && t.data.promotionRating && t.data.message && t.data.promotionComment) {
                                        e.next = 19;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 19:
                                    return window.chat.changeBotToAgent({
                                        name: null === (n = window.chat) || void 0 === n || null === (n = n.agentProfile) || void 0 === n ? void 0 : n.display_name,
                                        profile_picture: null === (a = window.chat) || void 0 === a || null === (a = a.agentProfile) || void 0 === a ? void 0 : a.avatar_path
                                    }), (0, r.ky)(f), window.chat.sendAgentDefaultMessage(!0, null === (d = window.chat.agentProfile) || void 0 === d ? void 0 : d.display_name, !1), window.chat.zendesk = JSON.parse(i.FJ.getItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l))), window.chat.zendesk.promotionRating = null === (c = t.data) || void 0 === c || null === (c = c.promotionRating) || void 0 === c ? void 0 : c.quickReplies, window.chat.zendesk.promotionComment = null === (u = t.data) || void 0 === u || null === (u = u.promotionComment) || void 0 === u ? void 0 : u.quickReplies, window.chat.showPromotion(window.chat.zendesk.promotionRating), t.data.message && !window.chat.zendesk.agentJoinedAck && (window.chat.zendesk.agentJoinedAck = !0, window.zChat.sendChatMsg(t.data.message, (function(e) {
                                        e && e("zendesk send error", e)
                                    })), window.chat.receiveMessage(JSON.stringify({
                                        message: "".concat(t.data.message)
                                    }))), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), e.abrupt("break", 60);
                                case 29:
                                    if (t.data && t.data.message) {
                                        e.next = 31;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 31:
                                    return window.chat.receiveMessage(JSON.stringify({
                                        message: "".concat(t.data.message)
                                    })), e.abrupt("break", 60);
                                case 33:
                                    return m = {
                                        clear_dept_id_on_chat_ended: !0
                                    }, window.chat.zendesk.userConnectedWithBot = !1, window.chat.zendesk.agentConnected = !1, s(".new-home-button").removeClass("hide"), i.FJ.deleteItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l)), window.zChat.isChatting() && window.zChat.endChat(m, (function(e) {
                                        (0, o.vU)("chat end error", e)
                                    })), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), e.abrupt("break", 60);
                                case 41:
                                    return window.chat.zendesk.userConnectedWithBot = !0, window.chat.receiveMessage(JSON.stringify(t.data.message)), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), e.abrupt("break", 60);
                                case 45:
                                    return window.chat.zendesk.userConnectedWithBot = !1, i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), e.abrupt("break", 60);
                                case 48:
                                    return window.zChat.sendChatRating(t.data.message), e.abrupt("break", 60);
                                case 50:
                                    return window.zChat.sendChatComment(t.data.message), e.abrupt("break", 60);
                                case 52:
                                    if (window.chat.zendesk.accountConnected) {
                                        e.next = 54;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 54:
                                    return v = window.zChat.getOperatingHours(), window.chat.send({
                                        event: {
                                            code: "zendesk_agent_working_details",
                                            data: v
                                        }
                                    }, !0), e.abrupt("break", 60);
                                case 57:
                                    return p = window.zChat.getDepartment(t.data.departmentId), window.chat.send({
                                        event: {
                                            code: "zendesk_department_status",
                                            data: p
                                        }
                                    }, !0), e.abrupt("break", 60);
                                case 60:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }(),
                _ = function() {
                    window.chat.timer && window.clearInterval(window.chat.timer), window.chat.timer = window.setInterval((function() {
                        if (window.chat.zendesk.connectionTime || (window.chat.zendesk.connectionTime = 0), window.chat.zendesk.connectionTime += 10, i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)), window.chat.zendesk.connectionTime > 600 || 0 === window.chat.zendesk.queue_position) return window.clearInterval(window.chat.timer), void(window.chat.zendesk.connectionTime > 600 && (window.chat.zendesk = {}, window.chat.send({
                            event: {
                                code: "zendesk_agent_not_joined_continue_bot_flow"
                            }
                        }, !0), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk))));
                        (0, o.cM)("timer running for zendesk :", window.chat.zendesk.connectionTime), window.chat.send({
                            event: {
                                code: "zendesk_agent_waiting_details",
                                data: {
                                    connectionTime: window.chat.zendesk.connectionTime,
                                    queue_position: window.chat.zendesk.queue_position
                                }
                            }
                        }, !0)
                    }), 1e4)
                },
                z = function() {
                    try {
                        for (var e, t = null === (e = window.chat) || void 0 === e || null === (e = e.zendeskChatTranscript) || void 0 === e ? void 0 : e.slice(0, 50), n = "", a = 0; a < t.length; a++) n += t[a] + "\n";
                        return n
                    } catch (e) {
                        (0, o.vU)(e)
                    }
                },
                y = function(e) {
                    if ("good" !== e.text && "bad" !== e.text) return "comment" === e.title.toLowerCase() || e.isZendeskComment ? (C({
                        message: e.text || e.title,
                        user: !0
                    }), window.chat.receiveMessage(JSON.stringify({
                        message: e.text || e.title
                    })), window.zChat.sendChatComment(e.text, function() {
                        var t = h(w().mark((function t(a) {
                            return w().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (!a) {
                                            t.next = 3;
                                            break
                                        }
                                        return (0, o.vU)("zendesk error", a), t.abrupt("return");
                                    case 3:
                                        return window.chat.zendesk.userCommented = e.text, t.next = 6, n.e(740).then(n.bind(n, 9482));
                                    case 6:
                                        (0, t.sent.closePromotion)();
                                    case 9:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }()), void(0 === window.zChat.getServingAgentsInfo().length ? window.chat.zendesk.userCommentClick = !1 : (window.chat.zendesk.userCommentClick = !window.zChat.getChatInfo().comment, window.chat.zendesk.agentRequestedRating && (window.chat.zendesk.userCommentClick = !0)))) : void 0;
                    window.zChat.sendChatRating(e.text, (function(t) {
                        t ? (0, o.vU)("zendesk error", t) : (window.chat.zendesk.userRated = e.text, window.chat.showPromotion(window.chat.zendesk.promotionComment), i.FJ.setItem("".concat(window.ymConfig.bot, "_zendesk_details_").concat(l), JSON.stringify(window.chat.zendesk)))
                    }))
                },
                C = function(e) {
                    window.ymConfig.zendeskId && window.chat.zendeskChatTranscript.push(function(e) {
                        var t;
                        return null != e && e.bot ? "".concat(null === (t = window.chat) || void 0 === t ? void 0 : t.botName, " Bot: ") + (null == e ? void 0 : e.message) : null != e && e.user ? "User: " + (null == e ? void 0 : e.message) : void 0
                    }(e))
                },
                b = function(e) {
                    if (window.ymConfig.zendeskId) {
                        for (var t, n = "".concat((null == e || null === (t = e.parsedMessage) || void 0 === t || null === (t = t.quickReplies) || void 0 === t ? void 0 : t.title) || "", " "), o = 0; o < (null == e || null === (a = e.parsedMessage) || void 0 === a || null === (a = a.quickReplies) || void 0 === a || null === (a = a.options) || void 0 === a ? void 0 : a.length); o++) {
                            var a, i, r;
                            n += " ".concat((null === (i = e.parsedMessage.quickReplies.options[o]) || void 0 === i ? void 0 : i.title) || (null === (r = e.parsedMessage.quickReplies.options[o]) || void 0 === r ? void 0 : r.text), " ")
                        }
                        C({
                            message: n,
                            bot: !0
                        })
                    }
                },
                x = function(e) {
                    if (window.ymConfig.zendeskId) {
                        var t, n = "".concat(null == e || null === (t = e.parsedMessage) || void 0 === t ? void 0 : t.message, " ");
                        C({
                            message: n,
                            bot: !0
                        })
                    }
                };

            function I() {
                window.chat.send({
                    event: {
                        code: "zendesk_user_request_ticket_close",
                        data: {
                            commented: window.chat.zendesk.userCommented,
                            rated: window.chat.zendesk.userRated
                        }
                    }
                }, !0)
            }
        }
    }
]);